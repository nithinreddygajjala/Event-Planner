import { AfterViewInit, ComponentRef, ElementRef, EventEmitter, OnDestroy, Renderer } from '@angular/core';
import { ComponentsHelper } from '../utils/components-helper.service';
import { ModalBackdropComponent } from './modal-backdrop.component';
import { ModalOptions } from './modal-options.class';
export declare class ModalDirective implements AfterViewInit, OnDestroy {
    protected element: ElementRef;
    protected renderer: Renderer;
    protected componentsHelper: ComponentsHelper;
    config: ModalOptions;
    onShow: EventEmitter<ModalDirective>;
    onShown: EventEmitter<ModalDirective>;
    onHide: EventEmitter<ModalDirective>;
    onHidden: EventEmitter<ModalDirective>;
    isAnimated: boolean;
    readonly isShown: boolean;
    protected _dialog: any;
    protected _config: ModalOptions;
    protected _isShown: boolean;
    protected isBodyOverflowing: boolean;
    protected originalBodyPadding: number;
    protected scrollbarWidth: number;
    protected backdrop: ComponentRef<ModalBackdropComponent>;
    protected timerHideModal: number;
    protected timerRmBackDrop: number;
    protected readonly document: any;
    /** Host element manipulations */
    onClick(event: any): void;
    onEsc(): void;
    constructor(element: ElementRef, renderer: Renderer, componentsHelper: ComponentsHelper);
    ngOnDestroy(): any;
    ngAfterViewInit(): any;
    /** Public methods */
    toggle(): void;
    show(): void;
    hide(event?: Event): void;
    /** Private methods */
    protected getConfig(config?: ModalOptions): ModalOptions;
    /**
     *  Show dialog
     */
    protected showElement(): void;
    protected hideModal(): void;
    protected showBackdrop(callback?: Function): void;
    protected removeBackdrop(): void;
    /** Events tricks */
    protected resetAdjustments(): void;
    /** Scroll bar tricks */
    protected checkScrollbar(): void;
    protected setScrollbar(): void;
    protected resetScrollbar(): void;
    protected getScrollbarWidth(): number;
}
